<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Count-Min Sketch on tech-lessons.in</title>
    <link>//localhost:1313/en/tags/count-min-sketch/</link>
    <description>Recent content in Count-Min Sketch on tech-lessons.in</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 24 Feb 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/en/tags/count-min-sketch/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Count-min sketch</title>
      <link>//localhost:1313/en/blog/count_min_sketch/</link>
      <pubDate>Fri, 24 Feb 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/en/blog/count_min_sketch/</guid>
      <description>&lt;p&gt;Count-min sketch (CM sketch) is a probabilistic data structure&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; used to estimate the frequency of events in a data stream.&lt;/p&gt;&#xA;&lt;p&gt;It relies on hash functions to map events to frequencies, but unlike a hash table, it uses only sublinear space at the expense of over-counting some events due to hash collisions. The countâ€“min sketch was invented in 2003 by Graham Cormode and S. Muthu Muthukrishnan.&lt;/p&gt;&#xA;&lt;h3 id=&#34;understanding-count-min-sketch&#34;&gt;Understanding Count-min Sketch&lt;/h3&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s say we want to build a solution to count the frequency of elements in a data stream. One idea would be to use a &lt;code&gt;hashmap&lt;/code&gt; with the data element as the key and count as the value. The approach works but does not scale with a data stream comprising billions of elements, the most unique.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
