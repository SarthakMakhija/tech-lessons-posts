<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Memtable on tech-lessons.in</title>
    <link>//localhost:1313/en/tags/memtable/</link>
    <description>Recent content in Memtable on tech-lessons.in</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 10 Oct 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/en/tags/memtable/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building blocks of LSM based key/value storage engines: Memtable</title>
      <link>//localhost:1313/en/blog/building_blocks_of_lsm_memtable/</link>
      <pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/en/blog/building_blocks_of_lsm_memtable/</guid>
      <description>&lt;h3 id=&#34;memtable&#34;&gt;Memtable&lt;/h3&gt;&#xA;&lt;p&gt;A fixed-size in-memory data structure that temporarily stores incoming writes until it reaches capacity. Each memtable typically&#xA;has a corresponding Write-Ahead Log (WAL) to ensure durability.&lt;/p&gt;&#xA;&lt;p&gt;Storage engines like Badger maintain an active (or current) memtable and a collection of inactive (or immutable) memtables.&#xA;When the active memtable fills up, its WAL is flushed, and the memtable becomes immutable. A new active memtable is then created&#xA;to handle subsequent writes.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
