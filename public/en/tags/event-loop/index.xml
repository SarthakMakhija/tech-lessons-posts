<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Event Loop on tech-lessons.in</title>
    <link>//localhost:1313/en/tags/event-loop/</link>
    <description>Recent content in Event Loop on tech-lessons.in</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 22 May 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/en/tags/event-loop/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Many flavors of Networking IO</title>
      <link>//localhost:1313/en/blog/many_flavors_of_networking_io/</link>
      <pubDate>Wed, 22 May 2024 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/en/blog/many_flavors_of_networking_io/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;p&gt;The foundation of any networked application hinges on its ability to efficiently handle data exchange.&#xA;But beneath the surface, there&amp;rsquo;s a hidden world of techniques for managing this communication.&#xA;This article dives into various &amp;ldquo;flavors&amp;rdquo; of networking IO, exploring the trade-offs associated with each approach.&lt;/p&gt;&#xA;&lt;p&gt;To illustrate various ways applications handle network traffic, we&amp;rsquo;ll build a TCP server using four distinct approaches:&#xA;&lt;strong&gt;blocking I/O with a single thread&lt;/strong&gt;, &lt;strong&gt;blocking I/O with multiple threads&lt;/strong&gt;, &lt;strong&gt;non-blocking I/O with busy waiting&lt;/strong&gt;, and&#xA;&lt;strong&gt;a single-threaded event loop&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
